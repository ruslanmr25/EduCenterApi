@page "/super-admin/centers/{Id:int}/edit"





<main class="nxl-container">
    <div class="nxl-content">


        <div class="main-content">
            <div class="row">
                <div class="col-lg-12">
                    <div class="card stretch stretch-full">

                        <hr class="mt-0">
                        <div class="card-body general-info">

                            @if (UpdateCenterDto is not null)
                            {

                                <EditForm OnValidSubmit="HandleSubmitAsync" FormName="UpdateCenter" Model="UpdateCenterDto">

                                    <DataAnnotationsValidator></DataAnnotationsValidator>

                                    <div class="mb-5 d-flex align-items-center justify-content-between">
                                        <h5 class="fw-bold mb-0 me-4">
                                            <span class="fs-20 d-block mb-2">O'quv markaz ma'lumotlari:</span>
                                            <span class="fs-16 fw-normal text-muted text-truncate-1-line">Quyidagilarning
                                                barchasini kiriting</span>
                                        </h5>
                                        <button class=" btn btn-primary" type="submit">Saqlash</button>
                                    </div>
                                    <div class="row mb-4 align-items-center">
                                        <div class="col-lg-4">
                                            <label for="fullnameInput" class="fw-semibold">Name: </label>
                                        </div>
                                        <div class="col-lg-8">
                                            <div class="input-group">
                                                <div class="input-group-text"><i class="feather-user"></i></div>
                                                <InputText @bind-Value="UpdateCenterDto.Name" class="form-control"
                                                    id="fullnameInput" placeholder="Name"></InputText>

                                            </div>
                                            <ValidationMessage class="text-danger" For="@(() => UpdateCenterDto.Name)">
                                            </ValidationMessage>

                                        </div>
                                    </div>






                                    <div class="row mb-4 align-items-center">
                                        <div class="col-lg-4">
                                            <label class="fw-semibold">Role: </label>
                                        </div>
                                        <div class="col-lg-8">
                                            <InputSelect @bind-Value="UpdateCenterDto.AdminId" class="form-control"
                                                data-select2-selector="city">
                                                <option data-city="bg-danger" value="">-- Adminlarni tanlash tanlash --
                                                </option>

                                                @foreach (var user in Users ?? [])
                                                {

                                                    <option value="@user.Id" data-city="bg-primary">@user.FullName</option>
                                                }


                                            </InputSelect>


                                            <ValidationMessage class="text-danger" For="@(() => UpdateCenterDto.AdminId)">
                                            </ValidationMessage>
                                        </div>
                                    </div>

                                </EditForm>
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- [ Main Content ] end -->
    </div>


</main>





@inject UserClient UserClient
@inject CenterClient CenterClient
@inject NavigationManager NavigationManager
@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    protected UpdateCenterDto? UpdateCenterDto { get; set; }



    protected IEnumerable<User>? Users { get; set; }


    protected override async Task OnInitializedAsync()
    {
        var users = await UserClient.GetAllAsync();

        Users = users.Items;

    }

    protected override async Task OnParametersSetAsync()
    {
        if (UpdateCenterDto is null)
        {

            Center center = await CenterClient.GetCenterByIdAsync(Id);

            UpdateCenterDto = new UpdateCenterDto
            {
                Name = center.Name,
                AdminId = center.AdminId
            };
        }



    }

    protected async Task HandleSubmitAsync()
    {
        await CenterClient.UpdateAsync(Id, UpdateCenterDto);


        NavigationManager.NavigateTo("/super-admin/centers");


    }

}