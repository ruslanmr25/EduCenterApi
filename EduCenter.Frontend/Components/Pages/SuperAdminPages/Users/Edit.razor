@page "/super-admin/users/{id:int}/edit"





<main class="nxl-container">
     <div class="nxl-content">


          <div class="main-content">
               <div class="row">
                    <div class="col-lg-12">
                         <div class="card stretch stretch-full">

                              <hr class="mt-0">
                              <div class="card-body general-info">

                                   <EditForm OnValidSubmit="HandleSubmitAsync" FormName="Update-User" Enhance
                                        Model="@UpdateUserDto">

                                        <DataAnnotationsValidator></DataAnnotationsValidator>

                                        <div class="mb-5 d-flex align-items-center justify-content-between">
                                             <h5 class="fw-bold mb-0 me-4">
                                                  <span class="fs-20 d-block mb-2">Foydalanuvchi ma'lumotlari:</span>
                                                  <span class="fs-16 fw-normal text-muted text-truncate-1-line">Quyidagilarning
                                                       barchasini kiriting</span>
                                             </h5>
                                             <button class=" btn btn-primary" type="submit">Saqlash</button>
                                        </div>
                                        <div class="row mb-4 align-items-center">
                                             <div class="col-lg-4">
                                                  <label for="fullnameInput" class="fw-semibold">Name: </label>
                                             </div>
                                             <div class="col-lg-8">
                                                  <div class="input-group">
                                                       <div class="input-group-text"><i class="feather-user"></i></div>
                                                       <InputText @bind-Value="UpdateUserDto!.FullName"
                                                            class="form-control" id="fullnameInput" placeholder="Name">
                                                       </InputText>

                                                  </div>
                                                  <ValidationMessage class="text-danger"
                                                       For="@(() => UpdateUserDto.FullName)"></ValidationMessage>

                                             </div>
                                        </div>

                                        <div class="row mb-4 align-items-center">
                                             <div class="col-lg-4">
                                                  <label for="usernameInput" class="fw-semibold">Username: </label>
                                             </div>
                                             <div class="col-lg-8">
                                                  <div class="input-group">
                                                       <div class="input-group-text"><i class="feather-link-2"></i>
                                                       </div>
                                                       <InputText @bind-Value="UpdateUserDto.Username"
                                                            class="form-control" id="usernameInput"
                                                            placeholder="Username"></InputText>

                                                  </div>
                                                  <ValidationMessage class="text-danger"
                                                       For="@(() => UpdateUserDto.Username)"></ValidationMessage>
                                             </div>
                                        </div>

                                        <div class="row mb-4 align-items-center">
                                             <div class="col-lg-4">
                                                  <label for="password" class="fw-semibold">Password: </label>
                                             </div>
                                             <div class="col-lg-8">
                                                  <div class="input-group">
                                                       <div class="input-group-text"><i class="feather-user"></i></div>
                                                       <InputText typeof="password" @bind-Value="UpdateUserDto.Password"
                                                            class="form-control" id="password" placeholder="Password">
                                                       </InputText>

                                                  </div>
                                                  <ValidationMessage class="text-danger"
                                                       For="@(() => UpdateUserDto.Password)"></ValidationMessage>

                                             </div>
                                        </div>





                                        <div class="row mb-4 align-items-center">
                                             <div class="col-lg-4">
                                                  <label for="phoneInput" class="fw-semibold">Phone: </label>
                                             </div>
                                             <div class="col-lg-8">
                                                  <div class="input-group">
                                                       <div class="input-group-text"><i class="feather-phone"></i></div>
                                                       <input type="text" class="form-control" id="phoneInput"
                                                            placeholder="Phone">
                                                  </div>
                                             </div>
                                        </div>




                                        <div class="row mb-4 align-items-center">
                                             <div class="col-lg-4">
                                                  <label class="fw-semibold">Role: </label>
                                             </div>
                                             <div class="col-lg-8">
                                                  <InputSelect @bind-Value="UpdateUserDto.RoleId" class="form-control"
                                                       data-select2-selector="city">
                                                       <option data-city="bg-danger" value="">-- Role tanlash --
                                                       </option>

                                                       @foreach (var role in Roles ?? [])
                                                       {

                                                            <option value="@role.Id" data-city="bg-primary">@role.Name
                                                            </option>
                                                       }


                                                  </InputSelect>


                                                  <ValidationMessage class="text-danger"
                                                       For="@(() => UpdateUserDto.RoleId)"></ValidationMessage>
                                             </div>
                                        </div>

                                   </EditForm>

                              </div>
                         </div>
                    </div>
               </div>
          </div>
          <!-- [ Main Content ] end -->
     </div>


</main>




@inject RoleClient RoleClient;
@inject UserClient UserClient;

@inject IJSRuntime JSRuntime;
@inject NavigationManager NavigationManager;


@code {


     [Parameter]
     public int Id { get; set; }


     [SupplyParameterFromForm]
     protected UpdateUserDto? UpdateUserDto { get; set; }


     protected IEnumerable<Role>? Roles { get; set; }


     protected override async Task OnParametersSetAsync()
     {



          User user = await UserClient.GetCenterByIdAsync(Id);



          if (user == null)
          {
               NavigationManager.NavigateTo("/super-admin/users");
               return;
          }

          UpdateUserDto = new UpdateUserDto
          {
               FullName = user.FullName,
               Username = user.Username,
               Password = user.Password,
               RoleId = user.RoleId
          };

     }

     protected override async Task OnInitializedAsync()
     {


          var result = await RoleClient.GetAllAsync()!;

          Roles = result.Items;

     }


     protected async Task HandleSubmitAsync()
     {



          ArgumentNullException.ThrowIfNull(UpdateUserDto);

          await UserClient.UpdateAsync(Id, UpdateUserDto);




          NavigationManager.NavigateTo("/super-admin/users");


     }

}